{
  "content": "/**\n * Sends email.\n * @param {string} to - email addresses of recipients.\n * @param {string} subject - subject of email message.\n * @param {string} body - body of email message.\n */\nfunction sendEmail(to, cc, subject, body) {\n  try {\n    MailApp.sendEmail({\n      to: to,\n      cc: cc,\n      subject: subject,\n      htmlBody: body\n    });\n  } catch(e) {\n    console.error(JSON.stringify(e));\n  }\n}\n\n\n/**\n * Sends email with template.\n * @param {string} to - email addresses of recipients.\n * @param {string} subject - subject of email message.\n * @param {string} template - text of template.\n * @param {Object} templateParams - parameter values for template.\n */\nfunction sendTemplateEmail(to, subject, template, templateParams) {\n\n  // Applying template parameters\n  var bodyTemplate \u003d HtmlService.createTemplate(template);\n  bodyTemplate.data \u003d templateParams;\n  var body \u003d bodyTemplate.evaluate().getContent();\n\n  // Sending email\n  sendEmail(to, subject, body);\n}\n\n\n/**\n * Gets remaining daily quota for datasource.\n * @return {Array\u003cRemainingDailyQuota\u003e} result array with single record.\n */\nfunction getRemainingDailyQuota_() {\n  var result \u003d app.models.RemainingDailyQuota.newRecord();\n  result.RemainingQuota \u003d MailApp.getRemainingDailyQuota();\n  return [result];\n}",
  "key": "qZbK0mp3cpqXV5kJDZico8o9QayNcAVQ",
  "name": "ServerScript",
  "type": "SERVER"
}